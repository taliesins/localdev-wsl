apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: etcd-tls-cert
spec:
  secretName: etcd-tls-secret
  duration: 2160h # 90 days
  renewBefore: 360h # 15 days
  issuerRef:
    name: cert-manager-ca
    kind: ClusterIssuer
  dnsNames:
    - "etcd.etcd.svc.cluster.local"
    - "etcd.etcd.svc"
    - "etcd.etcd"
    - "etcd"
    - "*.etcd.etcd.svc.cluster.local"
    - "*.etcd.etcd.svc"
    - "*.etcd.etcd"
    - "*.etcd"
    - "etcd-headless.etcd.svc.cluster.local"
    - "etcd-headless.etcd.svc"
    - "*.etcd-headless.etcd.svc.cluster.local"
    - "*.etcd-headless.etcd.svc"
    - "*.etcd-headless.etcd"
    - "*.etcd-headless"
  ipAddresses:
    - "127.0.0.1"
    - "::1"
  usages:
    - server auth
    - client auth

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: external-secrets-etcd-reader
  namespace: etcd
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
    resourceNames: ["etcd-root-credentials"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: external-secrets-etcd-reader-binding
  namespace: etcd
subjects:
  - kind: ServiceAccount
    name: external-secrets
    namespace: external-secrets
roleRef:
  kind: Role
  name: external-secrets-etcd-reader
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: etcd-cluster-secret-store
  namespace: external-secrets
spec:
  provider:
    kubernetes:
      remoteNamespace: etcd
      auth:
        serviceAccount:
          name: external-secrets
          namespace: external-secrets
      server:
        caProvider:
          key: ca-bundle.pem
          name: ca-bundle
          namespace: external-secrets
          type: ConfigMap
        url: kubernetes.default

---