# code: language=ansible
---
- name: Check if the etcd root credentials exist in Kubernetes secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: etcd-root-credentials
    namespace: etcd
  register: secret_check
  failed_when: false
  changed_when: false

- name: Extract existing credentials if secret exists
  set_fact:
    etcd_root_username: "{{ (secret_check.resources[0].data.username | b64decode) if secret_check.resources | length > 0 else 'root' }}"
    etcd_root_password: "{{ (secret_check.resources[0].data.password | b64decode) if secret_check.resources | length > 0 else '' }}"

- name: Generate a secure etcd root password if not found
  set_fact:
    etcd_root_password: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits') }}"
  when: etcd_root_password == ""

- name: Ensure 'etcd' namespace exists
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: etcd

- name: Create or update secure credentials for etcd root user in Kubernetes secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: etcd-root-credentials
        namespace: etcd
      type: Opaque
      data:
        username: "{{ etcd_root_username | b64encode }}"
        password: "{{ etcd_root_password | b64encode }}"

- name: Etcd cert-manager crds Yaml
  become: true
  become_user: '{{ user }}'
  ansible.builtin.template:
    src: etcd-cert-manager-crds-yml.j2
    dest: "{{ etcd_cert_manager_crds_yml }}"
    mode: 'u=rw,g=r,o=r'

- name: Deploy Etcd cert-manager crds
  become: true
  become_user: '{{ user }}'
  kubernetes.core.k8s:
    namespace: etcd
    state: present
    src: "{{ etcd_cert_manager_crds_yml }}"
    wait: yes

- name: ETCD Helm Overrides
  become: true
  become_user: '{{ user }}'
  ansible.builtin.template:
    src: etcd-overrides-yml.j2
    dest: "{{ etcd_helm_overrides }}"
    mode: 'u=rw,g=r,o=r'
  register: etcd_helm_overrides_result

- name: Deploy ETCD helm chart
  become: true
  become_user: '{{ user }}'
  kubernetes.core.helm:
    name: etcd
    release_namespace: etcd
    chart_ref: oci://registry-1.docker.io/bitnamicharts/etcd
    chart_version: "{{ etcd_helm_version }}"
    create_namespace: true
    update_repo_cache: "{{ etcd_helm_overrides_result.changed | default(true) }}"
    wait: true
    disable_hook: "{{ not (etcd_helm_overrides_result.changed | default(true)) }}"
    values_files:
      - "{{ etcd_helm_overrides }}"
  #when: (check_helm_deployment | default(true)) or (etcd_helm_overrides_result.changed | default(true))
