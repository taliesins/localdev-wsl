# code: language=ansible
---
- name: Install unarchive module dependencies
  become: true
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - tar
    - unzip
    - gzip

- name: Install kubernetes dependencies for root
  become: true
  ansible.builtin.pip:
    break_system_packages: true
    name:
      - pyyaml
      - kubernetes
      - kubernetes-validate

- name: Install kubernetes dependencies for user
  become: true
  become_user: '{{ user }}'
  ansible.builtin.pip:
    break_system_packages: true
    name:
      - pyyaml
      - kubernetes
      - kubernetes-validate

- name: Create download directory
  ansible.builtin.file:
    state: directory
    mode: 'u=rwx,g=rx,o=rx'
    dest: '{{ kubectl_download_dir }}'

- name: Download Kubectl
  ansible.builtin.get_url:
    url: '{{ kubectl_mirror }}/{{ kubectl_filename }}'
    dest: '{{ kubectl_download_dir }}/{{ kubectl_filename }}'
    #checksum: 'sha256:{{ kubectl_hash_mirror }}/bin/linux/amd64/kubectl.sha256'
    force: false
    use_proxy: true
    validate_certs: true
    mode: 'u=rw,g=r,o=r'

- name: Check current version
  ansible.builtin.command: >-
    {{ kubectl_install_dir }}/kubectl version --client --template
    {{ "'{{ if .Version }}{{ .Version }}{{ else }}{{ .Client.SemVer }}{{ end }}'" }}
  register: kubectl_current_version
  failed_when: false
  changed_when: false

- name: Current version
  ansible.builtin.debug:
    msg: '{{ kubectl_current_version.stdout }}'
  when: kubectl_current_version.rc == 0

- name: Remove existing installation
  become: true
  ansible.builtin.file:
    path: '{{ kubectl_install_dir }}'
    state: absent
  when:
    - kubectl_current_version.rc == 0
    - kubectl_current_version.stdout != ('v' + kubectl_version)

- name: Create the Kubectl installation dir
  become: true
  ansible.builtin.file:
    state: directory
    owner: root
    group: root
    mode: 'u=rwx,g=rx,o=rx'
    dest: '{{ kubectl_install_dir }}'

- name: Install Kubectl
  become: true
  ansible.builtin.unarchive:
    src: '{{ kubectl_download_dir }}/{{ kubectl_filename }}'
    remote_src: true
    dest: '{{ kubectl_install_dir }}'
    extra_opts:
      - '--strip-components=3'
    owner: root
    group: root
    mode: 'o-w'
    creates: '{{ kubectl_install_dir }}/kubectl'

- name: Create kubectl link
  become: true
  ansible.builtin.file:
    src: '{{ kubectl_install_dir }}/kubectl'
    dest: '/usr/local/bin/kubectl'
    state: link
    owner: root
    group: root
    mode: 'u=rwx,g=rx,o=rx'
