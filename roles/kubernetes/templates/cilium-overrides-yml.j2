containerRuntime: 
  integration: containerd
  socketPath: /run/containerd/containerd.sock

k8sServiceHost: 127.0.0.1
k8sServicePort: 6443

cluster:
  # -- Name of the cluster. Only required for Cluster Mesh.
  name: k3s
  # -- (int) Unique ID of the cluster. Must be unique across all connected
  # clusters and in the range of 1 to 255. Only required for Cluster Mesh.
  id: 1

annotateK8sNode: true

# must have kernel 5.18 or higher
bandwidthManager:
  enabled: true
  bbr: true

# New way of BGP in cilium
bgpControlPlane:
  enabled: true

pmtuDiscovery:
  # -- Enable path MTU discovery to send ICMP fragmentation-needed replies to
  # the client.
  enabled: true

bpf:
  # -- Allow cluster external access to ClusterIP services.
  lbExternalClusterIP: false

  # Enable native IP masquerade support in eBPF
  masquerade: true

  # -- (bool) Configure whether direct routing mode should route traffic via
  # host stack (true) or directly and more efficiently out of BPF (false) if
  # the kernel supports it. The latter has the implication that it will also
  # bypass netfilter in the host namespace.
  # @default -- `false`
  hostLegacyRouting: false

# -- Clean all eBPF datapath state from the initContainer of the cilium-agent
# DaemonSet.
#
# WARNING: Use with care!
cleanBpfState: true

# -- Clean all local Cilium state from the initContainer of the cilium-agent
# DaemonSet. Implies cleanBpfState: true.
#
# WARNING: Use with care!
# cleanState: false

# -- Enables the fallback compatibility solution for when the xt_socket kernel
# module is missing and it is needed for the datapath L7 redirection to work
# properly. See documentation for details on when this can be disabled:
# https://docs.cilium.io/en/stable/operations/system_requirements/#linux-kernel.
enableXTSocketFallback: false

externalIPs:
  # -- Enable ExternalIPs service support.
  enabled: true

# -- Install Iptables rules to skip netfilter connection tracking on all pod
# traffic. This option is only effective when Cilium is running in direct
# routing and full KPR mode. Moreover, this option cannot be enabled when Cilium
# is running in a managed Kubernetes environment or in a chained CNI setup.
installNoConntrackIptablesRules: false

ipam:
  mode: "cluster-pool"
  # ciliumNodeUpdateRate: "15s"
  operator:
    # -- IPv4 CIDR list range to delegate to individual nodes for IPAM. cluster-pool-ipv4-cidr
    clusterPoolIPv4PodCIDRList: ["10.42.128.0/17"]
    # -- IPv4 CIDR mask size to delegate to individual nodes for IPAM. cluster-pool-ipv4-cidr
    clusterPoolIPv4MaskSize: 20
    # -- IPv6 CIDR list range to delegate to individual nodes for IPAM. cluster-pool-ipv6-cidr
    clusterPoolIPv6PodCIDRList: ["fd69:fd69:fd69:6::/64"]
    # -- IPv6 CIDR mask size to delegate to individual nodes for IPAM. cluster-pool-ipv6-mask-size
    clusterPoolIPv6MaskSize: 80

ipv4:
  enabled: true

ipv6:
  enabled: true

kubeProxyReplacement: "true"
kubeProxyReplacementHealthzBindAddr: "0.0.0.0:10256"

l2NeighDiscovery:
  # -- Enable L2 neighbor discovery in the agent
  enabled: false
  # -- Override the agent's default neighbor resolution refresh period.
  refreshPeriod: "30s"

# -- Enable Layer 7 network policy.
# l7Proxy: true

enableIPv4Masquerade: true
enableIPv6Masquerade: false

# do not enable encryption and needs kernel 6.3
# enableIPv6BIGTCP: false
# do not enable encryption and needs kernel 6.3
# enableIPv4BIGTCP: false

# ipv4NativeRoutingCIDR: "10.0.0.0/8"
# ipv6NativeRoutingCIDR: "fd69:fd69:fd69::/48"

loadBalancer:
  standalone: false
  # maglev = more sticky, random
  algorithm: maglev
  acceleration: native
  # snat = source nat, dsr = direct server return (can't be used with tunnel: geneve)
  mode: snat
  # opt, ipip = lowest overhead but no multicast, geneve=does all the things
  dsrDispatch: ipip

tunnel: "geneve"
# this is auto set by picking tunnel
# routingMode: "tunnel"

operator:
  # -- Number of replicas to run for the cilium-operator deployment
  replicas: 1

# -- Configure L2 announcements
l2announcements:
  # -- Enable L2 announcements
  enabled: true
  # -- If a lease is not renewed for X duration, the current leader is considered dead, a new leader is picked
  leaseDuration: 600s
  # -- The interval at which the leader will renew the lease
  leaseRenewDeadline: 60s
  # -- The timeout between retries if renewal fails
  leaseRetryPeriod: 10s

k8sClientRateLimit:
  qps: 15
  burst: 30

# -- Specify which network interfaces can run the eBPF datapath. This means
# that a packet sent from a pod to a destination outside the cluster will be
# masqueraded (to an output device IPv4 address), if the output device runs the
# program. When not specified, probing will automatically detect devices.
devices: "eth0"
