# code: language=ansible
---

######################################################
## Custom Kernel
######################################################

kernel_version: "6.8.0"
kernel_arch: "x86_64"
kernel_mirror: "https://github.com/taliesins/WSL2-Linux-Kernel-Rolling/releases/download/linux-wsl-stable-{{ kernel_version }}"
kernel_modules_redis_filename: "bzImage-{{ kernel_arch }}-modules_install"
kernel_optional_redis_filename: "bzImage-{{ kernel_arch }}-optional_install"
kernel_download_dir: "{{ x_ansible_download_dir | default(ansible_env.HOME + '/.ansible/tmp/downloads') }}"

######################################################
## Kubectl
######################################################

# "kubectl" version to install
kubectl_version: "1.29.3"

# Processor architecture "kubectl" should run on
kubectl_arch: "amd64"  # other possible values: "386","arm64","arm","ppc64le","s390x"

# Operating system on which "kubectl" should run on
kubectl_os: "linux"  # use "darwin" for MacOS X, "windows" for Windows

# Mirror to download Kubectl from
kubectl_mirror: "https://storage.googleapis.com/kubernetes-release/release/v{{ kubectl_version }}"

kubectl_redis_filename: "kubernetes-client-{{ kubectl_os }}-{{ kubectl_arch }}.tar.gz"

# Dir where Kubectl should be installed
kubectl_install_dir: '/usr/local/share/kubectl'

# Directory to store files downloaded for kubectl
kubectl_download_dir: "{{ x_ansible_download_dir | default(ansible_env.HOME + '/.ansible/tmp/downloads') }}"

######################################################
## Helm
######################################################

# Helm version number
helm_version: '3.14.3'

# The CPU architecture of the Helm executable to install
helm_architecture: 'amd64'

# Operating system on which "helm" should run on
helm_os: "linux"  # use "darwin" for MacOS X, "windows" for Windows

# Mirror to download Helm from
helm_mirror: 'https://get.helm.sh'

helm_redis_filename: "helm-v{{ helm_version }}-{{ helm_os }}-{{ helm_architecture }}.tar.gz"

# Dir where Helm should be installed
helm_install_dir: '/usr/local/share/helm'

# Directory to store files downloaded for Helm
helm_download_dir: "{{ x_ansible_download_dir | default(ansible_env.HOME + '/.ansible/tmp/downloads') }}"

######################################################
## Cilium CLI
######################################################

# Cilium version number
cilium_cli_version: '0.16.4'

# The CPU architecture of the Cilium executable to install
cilium_cli_architecture: 'amd64'

# Operating system on which "cilium" should run on
cilium_cli_os: "linux"  # use "darwin" for MacOS X, "windows" for Windows

# Mirror to download Cilium from
cilium_cli_mirror: 'https://github.com/cilium/cilium-cli/releases/download/v{{ cilium_cli_version }}'

cilium_cli_redis_filename: "cilium-{{ cilium_cli_os }}-{{ cilium_cli_architecture }}.tar.gz"

# Dir where Cilium should be installed
cilium_cli_install_dir: '/usr/local/share/cilium'

# Directory to store files downloaded for Cilium
cilium_cli_download_dir: "{{ x_ansible_download_dir | default(ansible_env.HOME + '/.ansible/tmp/downloads') }}"

######################################################
## microk8s
######################################################

microk8s_version: 1.29

microk8s_channel: "{{ microk8s_version }}/stable"

microk8s_ipv4_support: "true"
microk8s_ipv4_cluster_cidr: "10.154.0.0/16"
microk8s_ipv4_service_cidr: "10.153.0.0/16"
microk8s_ipv6_support: "false"
microk8s_ipv6_cluster_cidr: "fd69:fd69:fd69:154::1/64"
microk8s_ipv6_service_cidr: "fd69:fd69:fd69:153::1/64"

microk8s_extra_sans:
  - "10.152.0.5"
  - "fe80::215:5dff:feae:6476"
  - "10.153.0.1"
  - "fd69:fd69:fd69:153::1"

microk8s_host_access_ip: "10.1.0.5"

microk8s_metallb_ip_range: "10.152.0.193-10.152.0.254"

microk8s_cluster_domain: "cluster.local"

microk8s_cluster_dns: "10.153.0.4"

######################################################
## Cuda
######################################################

cuda_toolkit_keyring_url: "https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/cuda-keyring_1.1-1_all.deb"

######################################################
## MetalLB - Fix
######################################################

metallb_fix_yml: "{{ x_ansible_download_dir | default(ansible_env.HOME + '/.ansible/tmp/downloads') }}/metallb-fix-overrides.yml"
